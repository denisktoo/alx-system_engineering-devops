https://www.canva.com/design/DAGvlhnh5xs/bapUJoEXproQbUNvKGaLaA/edit?utm_content=DAGvlhnh5xs&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton

Simple One-Server Web Infrastructure Summary ([www.foobar.com](http://www.foobar.com))

Overview:
A simple web infrastructure consists of a single physical or virtual server hosting the entire website. This is the most basic form of deployment, suitable for low-traffic websites, where all components run on one machine.

Components & Roles:

* Server: The physical or virtual machine that hosts the website and all related services.
* Domain Name: A human-readable address (e.g., [www.foobar.com](http://www.foobar.com)) that points to the server’s IP address.
* DNS Record: An A record for ‘www’ maps the domain name to the server’s IP.
* Web Server (Nginx): Handles HTTP/HTTPS requests from users, serves static files like HTML, CSS, and JavaScript directly, and forwards dynamic requests to the application server.
* Application Server: Runs the backend application code (e.g., Python, PHP), processes business logic, and communicates with the database.
* Database (MySQL/PostgreSQL): Stores persistent structured data such as user accounts, posts, and orders. It is accessed by the application server through SQL queries.
* Communication: User browsers connect to the server over HTTP/HTTPS protocols via TCP/IP.

Infrastructure Issues:

* Single Point of Failure (SPOF): If the single server fails or crashes, the entire website becomes unavailable.
* Limited Scalability: One server can struggle under high traffic, causing performance degradation.
* Downtime: Maintenance, updates, or deployments typically require restarting services, which causes temporary website unavailability.

Why Each Component is Included:

* The Web Server efficiently manages static content and routes dynamic requests.
* The Application Server handles backend logic and dynamic content generation.
* The Database stores and retrieves necessary data to support application functions.
* The DNS translates easy-to-remember domain names into machine-readable IP addresses.
* A Single Server setup simplifies deployment and maintenance for small projects but comes with trade-offs in reliability and scalability.

